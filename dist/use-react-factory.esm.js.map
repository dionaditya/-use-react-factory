{"version":3,"file":"use-react-factory.esm.js","sources":["../src/index.tsx"],"sourcesContent":["import { BehaviorSubject } from 'rxjs'\nimport { StreamBuilder as StreamProvider, Snapshot, ConnectionState as ConnectionStateProvider } from 'react-stream-builder'\nimport useObservable from \"use-observable\";\n\nexport type StreamSnapshot<T> = Snapshot<T>\n\nexport const createStore = <T extends unknown>(initValue: T) => {\n    const stream = new BehaviorSubject(initValue)\n    return {\n        stream,\n        initValue\n    }\n}\n\nexport const StreamBuilder = StreamProvider\nexport const ConnectionState = ConnectionStateProvider\n\ntype Sink = <T extends unknown>(stream: BehaviorSubject<T>) => {\n    add: (value: T) => void\n}\n\nexport const sink: Sink = <T extends unknown>(stream: BehaviorSubject<T>) => {\n    return {\n        add: (value: T) => stream.next(value)\n    }\n}\n\ninterface IReactFactory<T> {\n    state: T,\n}\n\nconst useReactFactory: <T>(stream: BehaviorSubject<T>, initValue: T) => IReactFactory<T> = \n    <T extends unknown>(stream: BehaviorSubject<T>, initValue: any) => {\n    const state = useObservable(stream, initValue)\n\n    return {\n        state,\n    }\n}\n\nexport {\n    useReactFactory\n};\n\n"],"names":["createStore","initValue","stream","BehaviorSubject","StreamBuilder","StreamProvider","ConnectionState","ConnectionStateProvider","sink","add","value","next","useReactFactory","state","useObservable"],"mappings":";;;;IAMaA,WAAW,GAAG,SAAdA,WAAc,CAAoBC,SAApB;AACvB,MAAMC,MAAM,GAAG,IAAIC,eAAJ,CAAoBF,SAApB,CAAf;AACA,SAAO;AACHC,IAAAA,MAAM,EAANA,MADG;AAEHD,IAAAA,SAAS,EAATA;AAFG,GAAP;AAIH;IAEYG,aAAa,GAAGC;IAChBC,eAAe,GAAGC;IAMlBC,IAAI,GAAS,SAAbA,IAAa,CAAoBN,MAApB;AACtB,SAAO;AACHO,IAAAA,GAAG,EAAE,aAACC,KAAD;AAAA,aAAcR,MAAM,CAACS,IAAP,CAAYD,KAAZ,CAAd;AAAA;AADF,GAAP;AAGH;;IAMKE,eAAe,GACjB,SADEA,eACF,CAAoBV,MAApB,EAAgDD,SAAhD;AACA,MAAMY,KAAK,GAAGC,aAAa,CAACZ,MAAD,EAASD,SAAT,CAA3B;AAEA,SAAO;AACHY,IAAAA,KAAK,EAALA;AADG,GAAP;AAGH;;;;"}