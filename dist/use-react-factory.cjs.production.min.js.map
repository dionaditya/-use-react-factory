{"version":3,"file":"use-react-factory.cjs.production.min.js","sources":["../src/index.tsx"],"sourcesContent":["import { BehaviorSubject } from 'rxjs'\nimport { StreamBuilder as StreamProvider, Snapshot, ConnectionState as ConnectionStateProvider } from 'react-stream-builder'\nimport useObservable from \"use-observable\";\n\nexport type StreamSnapshot<T> = Snapshot<T>\n\nexport const createStore = <T extends unknown>(initValue: T) => {\n    const stream = new BehaviorSubject(initValue)\n    return {\n        stream,\n        initValue\n    }\n}\n\nexport const StreamBuilder = StreamProvider\nexport const ConnectionState = ConnectionStateProvider\n\ntype Sink = <T extends unknown>(stream: BehaviorSubject<T>) => {\n    add: (value: T) => void\n}\n\nexport const sink: Sink = <T extends unknown>(stream: BehaviorSubject<T>) => {\n    return {\n        add: (value: T) => stream.next(value)\n    }\n}\n\ninterface IReactFactory<T> {\n    state: T,\n}\n\nconst useReactFactory: <T>(stream: BehaviorSubject<T>, initValue: T) => IReactFactory<T> = \n    <T extends unknown>(stream: BehaviorSubject<T>, initValue: any) => {\n    const state = useObservable(stream, initValue)\n\n    return {\n        state,\n    }\n}\n\nexport default useReactFactory\n\n"],"names":["StreamBuilder","StreamProvider","ConnectionStateProvider","initValue","stream","BehaviorSubject","state","useObservable","add","value","next"],"mappings":"6MAcaA,EAAgBC,wCACEC,8DATJ,SAAoBC,SAEpC,CACHC,OAFW,IAAIC,kBAAgBF,GAG/BA,UAAAA,oBAsBJ,SAAoBC,EAA4BD,SAGzC,CACHG,MAHUC,EAAcH,EAAQD,kBAZd,SAAoBC,SACnC,CACHI,IAAK,SAACC,UAAaL,EAAOM,KAAKD"}